{
	"info": {
		"_postman_id": "1ecef422-6318-40a7-929c-81e46ac22e46",
		"name": "Mif13 - Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30595291",
		"_collection_link": "https://bold-flare-226007.postman.co/workspace/MIF13~57540a19-6fa4-4b48-86ba-6b32c1bc9fab/collection/28699542-1ecef422-6318-40a7-929c-81e46ac22e46?action=share&source=collection_link&creator=30595291"
	},
	"item": [
		{
			"name": "Users operations",
			"item": [
				{
					"name": "{login}",
					"item": [
						{
							"name": "Récupère un utilisateur par son login",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users/bertrand",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bertrand"
									]
								}
							},
							"response": [
								{
									"name": "Utilisateur trouvé",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/html"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/users/:login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":login"
											],
											"variable": [
												{
													"key": "login"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Utilisateur non trouvé",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":login"
											],
											"variable": [
												{
													"key": "login"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Met à jour le mot de passe d'un utilisateur",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "password",
											"value": "1234",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/users/bertrand",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bertrand"
									]
								}
							},
							"response": [
								{
									"name": "Mot de passe mis à jour avec succès",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:login?password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":login"
											],
											"query": [
												{
													"key": "password",
													"value": "<string>",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "login"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Paramètres invalides",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:login?password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":login"
											],
											"query": [
												{
													"key": "password",
													"value": "<string>",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "login"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Utilisateur non trouvé",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:login?password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":login"
											],
											"query": [
												{
													"key": "password",
													"value": "<string>",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "login"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Erreur interne du serveur",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "<string>",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/users/:login?password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":login"
											],
											"query": [
												{
													"key": "password",
													"value": "<string>",
													"description": "(Required) "
												}
											],
											"variable": [
												{
													"key": "login"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Supprime un utilisateur par son login",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/bertrand",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"bertrand"
									]
								}
							},
							"response": [
								{
									"name": "Utilisateur supprimé avec succès",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":login"
											],
											"variable": [
												{
													"key": "login"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Utilisateur non trouvé",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":login"
											],
											"variable": [
												{
													"key": "login"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Erreur interne du serveur",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":login"
											],
											"variable": [
												{
													"key": "login"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Récupère tous les utilisateurs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Utilisateurs trouvés",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/html"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "<string>"
						},
						{
							"name": "Aucun utilisateur trouvé",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Ajoute un nouvel utilisateur",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login\": \"bertrand\",\n  \"species\": \"VILLAGEOIS\",\n  \"password\": \"oui\",\n  \"image\": \"image\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"<string>\",\n  \"species\": \"VILLAGEOIS\",\n  \"password\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users?login=<string>&species=VILLAGEOIS&password=<string>&image=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "login",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "species",
											"value": "VILLAGEOIS",
											"description": "(Required) "
										},
										{
											"key": "password",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "<string>"
						},
						{
							"name": "Utilisateur créé",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"<string>\",\n  \"species\": \"VILLAGEOIS\",\n  \"password\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users?login=<string>&species=VILLAGEOIS&password=<string>&image=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "login",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "species",
											"value": "VILLAGEOIS",
											"description": "(Required) "
										},
										{
											"key": "password",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"login\": \"<string>\",\n  \"species\": \"VILLAGEOIS\",\n  \"password\": \"<string>\",\n  \"connected\": \"<boolean>\",\n  \"image\": \"<string>\"\n}"
						},
						{
							"name": "Login déjà existant",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"login\": \"<string>\",\n  \"species\": \"VILLAGEOIS\",\n  \"password\": \"<string>\",\n  \"image\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/users?login=<string>&species=VILLAGEOIS&password=<string>&image=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "login",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "species",
											"value": "VILLAGEOIS",
											"description": "(Required) "
										},
										{
											"key": "password",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "image",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Users CRUD",
			"item": [
				{
					"name": "logout",
					"item": [
						{
							"name": "Déconnecte un utilisateur",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Authentication",
										"value": "{{Authentication}}"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/user/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"logout"
									]
								}
							},
							"response": [
								{
									"name": "Déconnexion réussie",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Authentication",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"logout"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Utilisateur non trouvé",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Authentication",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"logout"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "login",
					"item": [
						{
							"name": "Authentifie un utilisateur et génère un JWT",
							"request": {
								"method": "POST",
								"header": [
									{
										"description": "(Required) ",
										"key": "Origin",
										"value": "<string>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "login",
											"value": "{{Login1}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{Pass1}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/user/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									]
								}
							},
							"response": [
								{
									"name": "Connexion réussie",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Origin",
												"value": "<string>"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/login?login=<string>&password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"key": "login",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "password",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "<string>"
								},
								{
									"name": "Authentification échouée",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Origin",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/login?login=<string>&password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"key": "login",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "password",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Utilisateur non trouvé",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "(Required) ",
												"key": "Origin",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/login?login=<string>&password=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"key": "login",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "password",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "authenticate",
					"item": [
						{
							"name": "Authentifie un utilisateur via JWT",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/authenticate?jwt={{Authentication}}&origin={{Origin}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"authenticate"
									],
									"query": [
										{
											"key": "jwt",
											"value": "{{Authentication}}",
											"description": "(Required) "
										},
										{
											"key": "origin",
											"value": "{{Origin}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Authentification réussie",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/authenticate?jwt=<string>&origin=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"authenticate"
											],
											"query": [
												{
													"key": "jwt",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "origin",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"login\": \"<string>\",\n  \"species\": \"VILLAGEOIS\",\n  \"password\": \"<string>\",\n  \"connected\": \"<boolean>\",\n  \"image\": \"<string>\"\n}"
								},
								{
									"name": "JWT ou origine non fourni",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/authenticate?jwt=<string>&origin=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"authenticate"
											],
											"query": [
												{
													"key": "jwt",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "origin",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "JWT invalide",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/authenticate?jwt=<string>&origin=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"authenticate"
											],
											"query": [
												{
													"key": "jwt",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "origin",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Utilisateur non trouvé",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/authenticate?jwt=<string>&origin=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"authenticate"
											],
											"query": [
												{
													"key": "jwt",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "origin",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Tests d'intégration",
			"item": [
				{
					"name": "1. Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response is an object with user property', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('user');",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "{{Login1}}",
									"type": "text"
								},
								{
									"key": "species",
									"value": "PIRATE",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{Pass1}}",
									"type": "text"
								},
								{
									"key": "image",
									"value": "image1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var authHeader = pm.response.headers.get(\"Authentication\");",
									"pm.collectionVariables.set(\"Authentication\", authHeader);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Login successful', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message').equal(\"Login successful\")",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Origin",
								"value": "{{Origin}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "{{Login1}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{Pass1}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Authentificate",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response is an object with user property', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('user');",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/authenticate?jwt={{Authentication}}&origin={{Origin}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"authenticate"
							],
							"query": [
								{
									"key": "jwt",
									"value": "{{Authentication}}"
								},
								{
									"key": "origin",
									"value": "{{Origin}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Password change",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Login successful', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message').equal(\"Password updated successfully\")",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{Pass1Bis}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{Login1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{Login1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Login Old Pass",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var authHeader = pm.response.headers.get(\"Authentication\");",
									"pm.collectionVariables.set(\"Authentication\", authHeader);",
									"",
									"pm.test(\"Status code is 401\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Pass deoensen't match\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('status').equal(\"UNAUTHORIZED\");",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message').equal(\"The provided password does not match the user's password.\");",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Origin",
								"value": "{{Origin}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "player1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{Pass1}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "6. Auth Old token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"  pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Pass deoensen't match\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('status').equal(\"UNAUTHORIZED\");",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message').equal(\"Invalid JWT\");",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/authenticate?jwt={{Authentication}}&origin={{Origin}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"authenticate"
							],
							"query": [
								{
									"key": "jwt",
									"value": "{{Authentication}}"
								},
								{
									"key": "origin",
									"value": "{{Origin}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7. Login New Pass",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var authHeader = pm.response.headers.get(\"Authentication\");",
									"pm.collectionVariables.set(\"Authentication\", authHeader);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Login successful', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message').equal(\"Login successful\")",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Origin",
								"value": "{{Origin}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "login",
									"value": "{{Login1}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{Pass1Bis}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "8. Get User Infos",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('User Infos', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('user');",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{Login1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{Login1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "9. Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('User deleted successfully', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message').equal(\"User deleted successfully\");",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{Login1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{Login1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "10. Get User Infos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"  pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test('No User => No Infos', function () {",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('message').equal(\"User not found\");",
									"    pm.expect(pm.response.json()).to.be.an('object').that.has.property('status').equal(\"NOT_FOUND\");",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{Login1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{Login1}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://192.168.75.23:8080/users"
		},
		{
			"key": "format",
			"value": "json",
			"type": "string"
		},
		{
			"key": "Login1",
			"value": "player1",
			"type": "string"
		},
		{
			"key": "Pass1",
			"value": "password1",
			"type": "string"
		},
		{
			"key": "Pass1Bis",
			"value": "password1A",
			"type": "string"
		},
		{
			"key": "Authentication",
			"value": ""
		},
		{
			"key": "Origin",
			"value": "Postman",
			"type": "string"
		}
	]
}